{
  "heading": "Реализация KanbanBoard: RTK Query + HTML5 DnD + оптимистичные обновления",
  "chapter": "8.6",
  "input_data": "Ниже приведены итоговые файлы после серии запросов к GigaChat и ручного доведения: API-слайс, компонент страницы KanbanBoard и бизнес-компонент TaskCard. Реализованы оптимистичные обновления порядка задач и базовая доступность.",
  "answer": [
    {
      "type": "array",
      "title": "Что было исправлено и уточнено после ответов GigaChat",
      "array": [
        "Добавлена полноценная схема оптимистичных обновлений через onQueryStarted и updateQueryData с undo-патчем.",
        "Реализована устойчивость к отсутствию данных: дефолты для tasksById и columns, отрисовка заглушки «Нет задач».",
        "Внедрены ARIA-атрибуты и роли: role='list' для колонок, role='listitem' и aria-grabbed для карточек, tabIndex для фокуса.",
        "Разделены ответственность и производительность: карточка вынесена в мемоизированный TaskCard.",
        "Устранены ошибки переносов: явная передача destIndex в onDrop для корректной вставки в позицию."
      ]
    },
    {
      "type": "link",
      "title": "Результат промптов к GigaChat",
      "name": "1",
      "folder": "1",
      "chapter": "8.6"
    },
    {
      "type": "array",
      "title": "Итоговые промпты (для воспроизводимости процесса)",
      "array": [
        "Создай KanbanBoard: страница React, HTML5 Drag&Drop между колонками, данные из RTK Query (getBoard). В ответ включи JSX и обработчики dragstart/dragover/drop.",
        "Добавь RTK Query мутацию reorder (POST /api/v1/board/reorder) и реализуй оптимистичное обновление через onQueryStarted/updateQueryData с откатом при ошибке.",
        "Добавь доступность: role='list' у колонок, role='listitem' и aria-grabbed у карточек, tabIndex={0}, визуальный фокус карточки. Учти пустые списки задач.",
        "Вынеси карточку в отдельный компонент TaskCard (React.memo), проверь корректность ключей, обработай отсутствие данных."
      ]
    }
  ]
}
